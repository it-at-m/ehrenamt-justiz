server:
  port: 39146
spring:
  # Spring JPA
  jpa:
    # Logging for database operation
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  datasource:
    url: jdbc:postgresql://host.docker.internal:5432/postgres?currentSchema=ej
    password: admin
    username: admin
  flyway:
    locations:
      - classpath:db/migration/schema
      - classpath:db/migration/testdata
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${sso.url}/auth/realms/${sso.realm}/protocol/openid-connect/certs
          # adds audience verification - https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/jwt.html#_supplying_audiences
          # requires client to be in audience claim, see https://www.keycloak.org/docs/latest/server_admin/#_audience_resolve
          # audiences:
          #  - ${sso.client} not active, because of missing audience scope: https://github.com/it-at-m/refarch-templates/blob/main/stack/keycloak/migration/06_local-audience.yml in sso-client.json in ehrenamt-justiz

# Define eai
de:
  muenchen:
    ewo:
      eai:
        server: http://host.docker.internal:8085
        user: testuser
        password: testpw

# Define the local keycloak configuration here
# Deduplication-only property
sso:
  url: http://host.docker.internal:8100
  realm: local_realm
  client: ej-app

security:
  # possible values: none, all, changing (With changing, only changing requests such as POST, PUT, DELETE are logged)
  user-info-uri: ${sso.url}/auth/realms/${sso.realm}/protocol/openid-connect/userinfo
  logging-mode: all
