spring:
  main:
    banner-mode: console
  application:
    name: @project.artifactId@
    group: @project.groupId@
    version: @project.version@
  jackson:
    serialization:
      write-dates-as-timestamps: false
  lifecycle:
    timeout-per-shutdown-phase: 1m # Graceful shutdown: Zusätzlich kann man eine Zeitverzögerung für das Herunterfahren setzen

api:
  api:
    schema-version: @project.version@
    service-version: @project.version@
  cxf:
    producer:
      uri:
        personeninfo: "cxf:bean:ewoPersonErweitertServiceEndpointLesePersonErweitert?defaultOperationName=lesePersonErweitert"
        personeninfoewosuche: "cxf:bean:ewoPersonErweitertServiceEndpointSuchePersonErweitert?defaultOperationName=suchePersonErweitert"
      timeout: 5000
  auth:
    roles:
      BASIC: getPersoneninfo
      ACTUATOR_ROLE: ACTUATOR
  loggingFilter:
    urlPattern: ${service.rest.basepath}/*
    buffersize: 1024
    charsetName: UTF-8
    loggerName: "de.muenchen.ehrenamtjustiz.eai.personeninfo.filter.RequestResponseLoggingFilter"

camel:
  servlet:
    mapping:
      context-path: ${service.rest.basepath}/*

service:
  rest:
    basepath: "/api/personeninfo"

info:
  application:
    name: ${spring.application.name}
    version: ${spring.application.version}
    group: ${spring.application.group}
    description: "@project.description@"
  build:
    java.version: "@java.version@"
    camel.version: "@camel-spring-boot-dependencies.version@"

logging:
  level:
    root: info
  structured:
    format:
      console: logstash
    json:
      stacktrace:
        root: first
        # default max size of one log line in docker is 16kb - UTF8 ~ 1 Character = 1 Byte
        # therefore limit stack traces to a maximum of 8192 characters (to leave room for the rest of the message)
        max-length: 8192
      add:
        application_name: ${spring.application.name}
        application_group: ${spring.application.group}

management:
  endpoints:
    access:
      default: none
    web:
      exposure:
        include:
          - health
          - info
          - prometheus
          - sbom
      path-mapping:
        prometheus: metrics
  endpoint:
    health:
      access: read_only
      probes:
        enabled: true
    info:
      access: read_only
    sbom:
      access: read_only
  context-path: "/actuator"
  info:
    env.enabled: true
    java.enabled: true
    build.enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

server:
  shutdown: "graceful"